name: CD

on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    -
      name: 'Checkout'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    -
      name: Get latest git tag
      run: echo "LATEST_TAG=$(git describe --tags --abbrev=7)" >> $GITHUB_ENV

    -
      name: Build and push Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        NEXUS_HOST: ${{ secrets.NEXUS_HOST }}
      run: |
        docker build -t runtime:${{ env.LATEST_TAG }} .
        docker login "$NEXUS_HOST" -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        docker tag runtime:${{ env.LATEST_TAG }} ${{ secrets.NEXUS_HOST }}/etude-client/streamlit/runtime:${{ env.LATEST_TAG }}
        docker push ${{ secrets.NEXUS_HOST }}/etude-client/streamlit/runtime:${{ env.LATEST_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    -
      name: 'Checkout'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    -
      name: Get latest git tag
      run: echo "LATEST_TAG=$(git describe --tags --abbrev=7)" >> $GITHUB_ENV

    -
      name: Connect to VPN
      run: |
        sudo apt-get install openconnect network-manager-openconnect network-manager-openconnect-gnome
        echo "${{ secrets.VPN_PWD }}" | sudo openconnect -u ${{ secrets.VPN_USER }} --passwd-on-stdin --protocol=fortinet ${{ secrets.VPN_HOST }}:${{ secrets.VPN_PORT }} --servercert ${{ secrets.VPN_SERVERCERT }} &

    -
      name: Get and remove old docker image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PC_HOST }}
        username: ${{ secrets.PC_USER }}
        password: ${{ secrets.PC_PASSWORD }}
        script: |
          powershell -ExecutionPolicy Bypass -File ${{ secrets.PC_PATH }}docker-cleanup.ps1
    -
      name: Deploy on Data PC
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PC_HOST }}
        username: ${{ secrets.PC_USER }}
        password: ${{ secrets.PC_PASSWORD }}
        script: |

          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ${{ secrets.NEXUS_HOST }} && docker pull ${{ secrets.NEXUS_HOST }}/etude-client/streamlit/runtime:${{ env.LATEST_TAG }} && docker run -d --mount type=bind,source=${{ secrets.PC_DATA_PATH }},target=/app/data/ -p 8501:8501 --name customer-portrait ${{ secrets.NEXUS_HOST }}/etude-client/streamlit/runtime:${{ env.LATEST_TAG }}